{"version":3,"file":"static/js/981.92ea4728.chunk.js","mappings":"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","sources":["Components/TitleModal.tsx","Components/ProductTable.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useAppDispatch } from \"./hooks\";\r\nimport { updateProduct } from \"../Redux/Actions/ProductAction\";\r\nimport { Product } from \"../Redux/Types/ProductTypes\";\r\n\r\ninterface TitleModalProps {\r\n  showModal: boolean;\r\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  selectedProduct: Product | null;\r\n  setSelectedProduct: React.Dispatch<React.SetStateAction<Product | null>>;\r\n  products: Product[];\r\n  setProducts: React.Dispatch<React.SetStateAction<Product[]>>;\r\n}\r\n\r\nconst TitleModal = ({\r\n  showModal,\r\n  setShowModal,\r\n  selectedProduct,\r\n  setSelectedProduct,\r\n  products,\r\n  setProducts,\r\n}: TitleModalProps) => {\r\n  const handleCloseModal = () => setShowModal(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSaveChanges = () => {\r\n    if (selectedProduct) {\r\n      // Update the local state immediately\r\n      const updatedProducts = products.map((product) =>\r\n        product.id === selectedProduct.id\r\n          ? { ...product, ...selectedProduct }\r\n          : product\r\n      );\r\n      setProducts(updatedProducts); // Update the products state\r\n      const payload = {\r\n        id: selectedProduct.id,\r\n        title: selectedProduct.title,\r\n        category: selectedProduct.category,\r\n        price: selectedProduct.price,\r\n        availabilityStatus: selectedProduct.availabilityStatus,\r\n        rating: selectedProduct.rating,\r\n        thumbnail: selectedProduct.thumbnail,\r\n      };\r\n      dispatch(updateProduct(payload));\r\n\r\n      // Optionally, dispatch the API update\r\n      // dispatch(updateProduct(selectedProduct));\r\n    }\r\n    handleCloseModal();\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal show={showModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Product Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {selectedProduct && (\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={selectedProduct.title}\r\n                  onChange={(e) =>\r\n                    setSelectedProduct({\r\n                      ...selectedProduct,\r\n                      title: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={selectedProduct.category}\r\n                  onChange={(e) =>\r\n                    setSelectedProduct({\r\n                      ...selectedProduct,\r\n                      category: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={selectedProduct.price}\r\n                  onChange={(e) =>\r\n                    setSelectedProduct({\r\n                      ...selectedProduct,\r\n                      price: Number(e.target.value),\r\n                    })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Availability Status</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={selectedProduct.availabilityStatus}\r\n                  onChange={(e) =>\r\n                    setSelectedProduct({\r\n                      ...selectedProduct,\r\n                      availabilityStatus: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Rating</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={selectedProduct.rating}\r\n                  onChange={(e) =>\r\n                    setSelectedProduct({\r\n                      ...selectedProduct,\r\n                      rating: Number(e.target.value),\r\n                    })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              {/* <Form.Group>\r\n                <Form.Label>Thumbnail</Form.Label>\r\n                <img src={selectedProduct.thumbnail} alt=\"thumbnail\" />\r\n              </Form.Group> */}\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleModal;\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport TitleModal from \"./TitleModal\";\r\nimport \"./productTable.css\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  category: string;\r\n  availabilityStatus: string;\r\n  price: number;\r\n  rating: number;\r\n  thumbnail: string;\r\n  tags?: [];\r\n  description?: string;\r\n  discountPercentage?: number;\r\n  shippingInformation?: string;\r\n}\r\n\r\ninterface ProductTableProps {\r\n  products: Product[];\r\n}\r\n\r\nconst ProductTable: React.FC<ProductTableProps> = ({ products }) => {\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [selectedProduct, setSelectedProduct] = React.useState<Product | null>(\r\n    null\r\n  );\r\n\r\n  const [localProducts, setLocalProducts] = React.useState<Product[]>(products);\r\n\r\n  const handleTitleClick = (product: Product) => {\r\n    setSelectedProduct(product);\r\n    setShowModal(true);\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center row\">\r\n      <TitleModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        selectedProduct={selectedProduct}\r\n        setSelectedProduct={setSelectedProduct}\r\n        products={localProducts}\r\n        setProducts={setLocalProducts}\r\n      />\r\n      <div className=\"col-md-10\">\r\n        <h3 className=\"mb-4\">Products</h3>\r\n        {Array.isArray(products) &&\r\n          products.length > 0 &&\r\n          products.map((product) => {\r\n            const {\r\n              title,\r\n              id,\r\n              category,\r\n              tags,\r\n              description,\r\n              price,\r\n              discountPercentage = 0,\r\n              shippingInformation,\r\n              thumbnail,\r\n            } = product;\r\n            const discount = Number((price / 100) * discountPercentage);\r\n            const actualPrice = Number(price - discount).toFixed(2);\r\n            return (\r\n              <div key={id} className=\"row p-2 bg-white border rounded\">\r\n                <div className=\"col-md-3 mt-1\">\r\n                  <img\r\n                    className=\"img-fluid img-responsive rounded product-image\"\r\n                    src={thumbnail}\r\n                    alt=\"product\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 mt-1\">\r\n                  <h5\r\n                    onClick={() => handleTitleClick(product)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    {title}\r\n                  </h5>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <span>{category}</span>\r\n                  </div>\r\n                  <div className=\"mt-1 mb-1 spec-1\">\r\n                    {Array.isArray(tags) &&\r\n                      tags.map((tag, idx) => (\r\n                        <React.Fragment key={idx}>\r\n                          <span>{tag}</span>\r\n                          <span className=\"dot\"></span>\r\n                        </React.Fragment>\r\n                      ))}\r\n                  </div>\r\n                  <p className=\"text-justify text-truncate para mb-0\">\r\n                    {description}\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                </div>\r\n                <div className=\"align-items-center align-content-center col-md-3 border-left mt-1\">\r\n                  <div className=\"d-flex flex-row align-items-center\">\r\n                    <h4 className=\"mr-1\">${actualPrice}</h4>\r\n                    <span className=\"strike-text\">${price}</span>\r\n                  </div>\r\n                  <h6 className=\"text-success\">{shippingInformation}</h6>\r\n                  <div className=\"d-flex flex-column mt-4\">\r\n                    <button\r\n                      className=\"btn btn-primary btn-sm\"\r\n                      type=\"button\"\r\n                      onClick={() => handleTitleClick(product)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n"],"names":["_ref","showModal","setShowModal","selectedProduct","setSelectedProduct","products","setProducts","handleCloseModal","dispatch","useAppDispatch","_jsx","children","_jsxs","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","type","value","title","onChange","e","target","category","price","Number","availabilityStatus","rating","Footer","Button","variant","onClick","handleSaveChanges","updatedProducts","map","product","id","payload","thumbnail","updateProduct","React","localProducts","setLocalProducts","handleTitleClick","className","TitleModal","Array","isArray","length","tags","description","discountPercentage","shippingInformation","discount","actualPrice","toFixed","src","alt","style","cursor","tag","idx"],"sourceRoot":""}