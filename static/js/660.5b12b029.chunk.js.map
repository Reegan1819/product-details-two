{"version":3,"file":"static/js/660.5b12b029.chunk.js","mappings":"2KAOA,MAkCA,EAlC4CA,IAAmB,IAAlB,IAAEC,EAAG,IAAEC,GAAKF,EACvD,MAAMG,GAASC,EAAAA,EAAAA,QAAgC,OACxCC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAqB3C,OAnBAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaN,EAAOO,QAEpBC,EAAW,IAAIC,sBAAsBC,IACrCA,EAAQ,GAAGC,iBACbR,GAAa,GACTG,GAAYE,EAASI,UAAUN,GACrC,IAOF,OAJIA,GACFE,EAASK,QAAQP,GAGZ,KACDA,GAAYE,EAASI,UAAUN,EAAW,CAC/C,GACA,CAACN,KAGFc,EAAAA,EAAAA,KAAA,OACEC,IAAKf,EACLF,IAAKI,EAAYJ,OAAMkB,EACvBjB,IAAKA,EACLkB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAChCC,QAAQ,QACR,C","sources":["Components/LazyImage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\ninterface LazyImageProps {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nconst LazyImage: React.FC<LazyImageProps> = ({ src, alt }) => {\r\n  const imgRef = useRef<HTMLImageElement | null>(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const imgElement = imgRef.current;\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setIsVisible(true);\r\n        if (imgElement) observer.unobserve(imgElement);\r\n      }\r\n    });\r\n\r\n    if (imgElement) {\r\n      observer.observe(imgElement);\r\n    }\r\n\r\n    return () => {\r\n      if (imgElement) observer.unobserve(imgElement);\r\n    };\r\n  }, [imgRef]);\r\n\r\n  return (\r\n    <img\r\n      ref={imgRef}\r\n      src={isVisible ? src : undefined} // Only load the image if it is visible\r\n      alt={alt}\r\n      style={{ width: \"100%\", height: \"200px\" }} // Optional styling\r\n      loading=\"lazy\" // Optional: for additional lazy loading support\r\n    />\r\n  );\r\n};\r\n\r\nexport default LazyImage;\r\n"],"names":["_ref","src","alt","imgRef","useRef","isVisible","setIsVisible","useState","useEffect","imgElement","current","observer","IntersectionObserver","entries","isIntersecting","unobserve","observe","_jsx","ref","undefined","style","width","height","loading"],"sourceRoot":""}